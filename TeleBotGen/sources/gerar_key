#!/bin/bash
# -*- ENCODING: UTF-8 -*-

# verificacion primarias
[[ -e /etc/newadm-instalacao ]] && BASICINST="$(cat /etc/newadm-instalacao)" || BASICINST="ADMbot.sh apacheon.sh blockBT.sh budp.sh Crear-Demo.sh C-SSR.sh dns-netflix.sh dropbear.sh fai2ban.sh gestor.sh menu message.txt openvpn.sh paysnd.sh PDirect.py PGet.py POpen.py ports.sh PPriv.py PPub.py shadowsocks.sh Shadowsocks-libev.sh Shadowsocks-R.sh sockspy.sh speed.sh speedtest.py squid.sh squidpass.sh ssl.sh tcp.sh ultrahost Unlock-Pass-VULTR.sh usercodes utils.sh v2ray.sh"
SCPT_DIR="/etc/SCRIPT"
[[ ! -e ${SCPT_DIR} ]] && mkdir ${SCPT_DIR}
INSTA_ARQUIVOS="ADMVPS.zip"
DIR="/etc/http-shell"
LIST="TSOHG_NEGYEK"
[[ -e /etc/menu_ito ]] && nomkey="$(cat /etc/menu_ito)" || nomkey="$(curl -sSL "https://raw.githubusercontent.com/DanssBot/DanBot/main/TeleBotGen/Control/credits")"
[[ -e /etc/menu_numito ]] && menumito="$(cat /etc/menu_numito)" || menumito="https://t.me/dansbot"
gerar_key () {
meu_ip_fun
valuekey="$(date | md5sum | head -c10)"
valuekey+="$(echo $(($RANDOM*10))|head -c 5)"
fun_list "$valuekey"
keyfinal=$(ofus "$IP:8888/$valuekey/$LIST")
local bot_retorno="$LINE\n"
bot_retorno+="▪︎▪︎▪︎ ADM-ADMIN VPS ▪︎▪︎▪︎\n"
bot_retorno+="$(printf '%(%D-%H:%M:%S)T')\n"
bot_retorno+="$LINE\n" 
bot_retorno+="🛡️RESELLER🛡️: $nomkey\n"
bot_retorno+="$LINE\n"
bot_retorno+="✅Key Generada Con Exito!✅\n"
bot_retorno+="$LINE\n"
bot_retorno+="${keyfinal}\n"
bot_retorno+="$LINE\n"
bot_retorno+="🛡️INSTALADOR DE SCRIPT🛡️\n"
#bot_retorno+="\n"
bot_retorno+="sudo apt-get update -y && apt-get upgrade -y; wget https://raw.githubusercontent.com/DanssBot/Adm/main/instalscript.sh; chmod 777 instalscript.sh && ./instalscript.sh\n"
bot_retorno+="$LINE\n"
bot_retorno+="⚠️Esta key se autodestruira en 24hs y pasado\n este tiempo debe generar una nueva key.⚠️\n"
bot_retorno+="$LINE\n"
bot_retorno+="️🚀Soporte: Ubuntu 14.04▪︎16.04▪︎18.04▪︎20.04\nSO Recomendado: Ubuntu 18.04🚀\n"
bot_retorno+="$LINE\n"
bot_retorno+="『 $numkey_used 』keys Usadas ✅ \n『 $numkey_gen 』keys Generadas✅\n"
bot_retorno+="$LINE"
msj_fun

echo -e $bot_retorno >> ${keytxt}/key_${chatuser}.txt
upfile_fun ${keytxt}/key_${chatuser}.txt
rm ${keytxt}/key_${chatuser}.txt
}

ofus () {
unset server
server=$(echo ${txt_ofuscatw}|cut -d':' -f1)
unset txtofus
number=$(expr length $1)
for((i=1; i<$number+1; i++)); do
txt[$i]=$(echo "$1" | cut -b $i)
case ${txt[$i]} in
".")txt[$i]="+";;
"+")txt[$i]=".";;
"1")txt[$i]="@";;
"@")txt[$i]="1";;
"2")txt[$i]="?";;
"?")txt[$i]="2";;
"4")txt[$i]="%";;
"%")txt[$i]="4";;
"-")txt[$i]="K";;
"K")txt[$i]="-";;
esac
txtofus+="${txt[$i]}"
done
echo "$txtofus" | rev
}

fun_list () {
rm ${SCPT_DIR}/*.x.c &> /dev/null
unset KEY
KEY="$1"
#CRIA DIR
[[ ! -e ${DIR} ]] && mkdir ${DIR}
#ENVIA ARQS
i=0
VALUE+="gerar.sh instgerador.sh http-server.py lista-arq $BASICINST"
for arqx in `ls ${SCPT_DIR}`; do
[[ $(echo $VALUE|grep -w "${arqx}") ]] && continue 
echo -e "[$i] -> ${arqx}"
arq_list[$i]="${arqx}"
let i++
done
#CRIA KEY
[[ ! -e ${DIR}/${KEY} ]] && mkdir ${DIR}/${KEY}
#PASSA ARQS
nombrevalue="${chatuser}"
echo "$nombrevalue" >> /etc/ADM-db/num-key.cont
numkey_used=$(grep -o -i $nombrevalue /etc/gerar-sh-log | wc -l)
numkey_gen=$(grep -o -i $nombrevalue /etc/ADM-db/num-key.cont | wc -l)
#ADM BASIC
arqslist="$BASICINST"
for arqx in `echo "${arqslist}"`; do
[[ -e ${DIR}/${KEY}/$arqx ]] && continue #ANULA ARQUIVO CASO EXISTA
cp ${SCPT_DIR}/$arqx ${DIR}/${KEY}/
echo "$arqx" >> ${DIR}/${KEY}/${LIST}
done
rm ${SCPT_DIR}/*.x.c &> /dev/null
echo "$nombrevalue" > ${DIR}/${KEY}.name
[[ ! -z $IPFIX ]] && echo "$IPFIX" > ${DIR}/${KEY}/keyfixa
at now +24 hours <<< "rm -rf ${DIR}/${KEY} && rm -rf ${DIR}/${KEY}.name"
}
